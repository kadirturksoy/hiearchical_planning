s_node = [1 1 1];
f_node = [1 2 1];

% find common ancestor

h_level = 1;

while h{h_level,s_node(h_level+1)}.NodeList(s_node(h_level)).Parent ~= h{h_level,f_node(h_level+1)}.NodeList(f_node(h_level)).Parent
    h_level = h_level + 1;
end

h_level
common_ancestor = h{h_level,s_node(h_level+1)}.NodeList(s_node(h_level)).Parent;


prev_path = [common_ancesttor];
    
for i=1:h_level
    
    
    current_level = h_level-i+1;
    
    start = s_node(current_level);
    if size(prev_path,2) == 1
        finish = f_node(current_level);
    else
        finish = 
    end
    
    for j=2:size(prev_path,2)
        
        start = s_node(current_level);
        finish = f_node(current_level);
        g = h{current_level,common_ancestor};
        path = [ path h_dijkstra(start,finish,g)];
        
    end
    
       
end




